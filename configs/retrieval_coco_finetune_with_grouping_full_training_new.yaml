image_root: '/shared/nas/data/m1/wangz3/Shared_Datasets/VL/COCO/images'
ann_root: '/shared/nas/data/m1/wangz3/Shared_Datasets/VL/COCO/annotations'
dataset: 'coco_with_grouping'
ann_json: null # can be specified if want to use a specific ann_json for training
val_ann_json: null # can be specified if want to use a specific ann_json for val
test_ann_json: null # can be specified if want to use a specific ann_json for test

batching_config:
  batching_root: './batching/coco_retrieval_train_t_125_v_32_clip_original'
  grouping_function: 'clip'
  embedding_root: './embedding/coco_retrieval_train_clip'
  mode: 'all_duplicate'
  k1: 125
  k2: 32
  batch_size: 32
  order: 't_v'
  model_ckpt: 'openai/clip-vit-base-patch32'
  embedding_mode: 'original'
ratio: 1


# set pretrained as a file path or an url
pretrained: '/shared/nas/data/m1/wangz3/video_language_pretraining_project/BLIP/ckpt/pretrained/model_base.pth'

# size of vit model; base or large

vit: 'base'
batch_size_train: 1 # pre-computed groups already batched, batch size equal to k2
batch_size_test: 64
vit_grad_ckpt: True
vit_ckpt_layer: 4
init_lr: 1e-5

# vit: 'large'
# batch_size_train: 16
# batch_size_test: 32
# vit_grad_ckpt: True
# vit_ckpt_layer: 12
# init_lr: 5e-6

image_size: 384
queue_size: 57600
alpha: 0.4
k_test: 256
negative_all_rank: True

# optimizer
weight_decay: 0.05
min_lr: 0
max_epoch: 6 # original 6



